annotation 기반으로 트랜잭션을 처리하는거나..

aop로 트랜잭션을 처리하는거나 동일합니다..

예전에 댓글에도 명시했지만..2개의 DB를 하나의 트랜잭션에서 동작시켜야 하느냐..

또는 2개의 DB를 각각 DB에 의존적인 독립적인 트랜잭션에 두드냐..그것을 개념부터 잡아야 하는거죠..

예를 들면..

Oracle 을 연동하는 서비스와 MySQL을 연동하는 서비스가 하나의 트랜잭션으로 묶여서 동작할 상황이 있는지..

그럴일은 절대없는지를 먼저 판단해야 하는겁니다..

사실..절대도 없습니다..제 지인이 했던 프로젝트도 DB가 MySQL이 아닌 DB2를 사용했지만..

처음에 플젝 진행했을때는 Oracle과 DB2가 하나의 트랜잭션에서 서비스 될 일이 없다고 얘기가 나와서 2개의 DB를 분리된 트랜잭션 매니저로 관리했다가..

일을 하다보니 그런 상황이 생겨서 하나의 트랜잭션으로 묶어서 작업하는 상황이 생겼거든요..

2개의 DB를 사용한다는건 장기적으론 그런 상황이 발생할 수도 있다는 가정하에서 설정을 잡아야 하기땜에..

애초에 초반에 2개의 DB를 하나의 트랜잭션 매니저로 묶어서 작업하게끔 설정하는 것이 차후에 설정을 바꾸는 상황이 나와서 기존 코딩을 꼬이게 해버리는것보단 나은거죠..

만약 2개의 DB를 하나의 트랜잭션 매니저로 묶어서 트랜잭션 관리를 하게 되는 것이 단일 DB를 이용할때 퍼포먼스가 떨어지는 문제점이 있다면(이런 문제점은 없을것도 같은데 그래도 있다고 가정하면..)

그땐 Oracle과 MySQL을 묶어서 관리하는 트랜잭션 매니저와 Oracle 관리하는 트랜잭션 매니저, MySQL를 관리하는 트랜잭션 매니저 이렇게 3개를 만들어서 사용하면 됩니다..

그래서 상황에 따라 이용하면 되죠..

무엇을 기준으로 처음에 했던 어노테이션 설정이 잘못되었다고 판단했는지는 모르겠네요..제가 말한건 상황에 따라 저 설정이 틀릴수도 있다고 말한거에요..두 DB를 하나의 트랜잭션으로 묶어서 작업해야 할 일이 존재한다면 저 설정은 틀린거지만..그럴일이 절대(?)없으면 설정은 틀리지 않았습니다..



사수가 없다 하시니 좀더 설명을 드리면..

처음 댓글에 API 문서에 답이 있다고 했는데 API 문서에서 @Transactional을 보시긴 하신건가요?

@Transactional 어노테이션에 보면 속성중에 transactionManager 란 속성이 있습니다..

이 속성에 @Transactional 이 사용하게 될 TransactionManager id값을 주면 해당 TransactionManager를 이용해서 트랜잭션 처리를 하게 됩니다..

그걸 명시하지 않으면 default로 id가 transactionManager인 것을 사용하기땜에 트랜잭션이 한쪽으로 몰려서 돌아가는거에요..

만약 @Transactional 사용시 transactionManager 속성에 Oracle 것과 MySQL 것을 명시해주었으면 문제가 없었을겁니다..

그러나 이 방법은 위에서 얘기한..2개의 DB가 서로 다른 트랜잭션에서 분리되어 돌아가는 상황일때나 이렇게 하는거고..하나의 트랜잭션에서 묶어서 돌아가게끔 할려면 이 방법으론 안됩니다..이럴 경우엔 JTA를 사용하는 설정으로 가야 합니다..



JTA는 WAS에 의존적이기 때문에 Spring에서는 유명한 WAS(웹로직, JBOSS, 웹스피어)에 대해서는 해당 WAS의 JTA에 맞는 트랜잭션 매니저 클래스를 제공해줍니다..이게 가능한것이 JTATransactionManager를 사용하겠다고 설정하면 내부적으로 자신이 어떤 WAS에서 돌아가고 있는지를 파악해서 그에 맞는 JTATransactionManager 구현체를 올려주는거죠..

그러나 톰캣같은 J2EE 서버가 아니거나 JEUS 같이 국내에서만 유명한 WAS의 경우는 이를 지원하지는 않습니다..이럴 경우엔 JTA 역할을 해주는 별도 프레임워크를 같이 연동해서 써야 합니다..Spring의 경우는 Atomikos 프레임워크를 사용해서 이런 역할을 할 수 있습니다..JEUS를 사용한다면 Tmax 쪽에 현재의 상황을 설명하고 그에 맞는 설정 샘플을 달라고 요청해보세요..Tmax 쪽에서 Jeus에 맞는 Spring JTATransaction Manager 구현체를 개발한게 있다면 그걸 줄수도 있을듯 하네요..JTATransactionManager가 인터페이스 이기땜에 실제 구현체 클래스를 만들어야 동작을 하거든요..Tmax라면 Jeus에 맞는 JTATransaction Manager 구현체를 만들었을 법도 한데요..



일단 자신이 어떤 상황의 설정을 해야 하는지 그것부터 명확히 하고 그에 맞게 진행하세요..spring jta transaction manager 머 이런식의 검색어로 구글링하면 설정방법은 많이 나와 있습니다..

